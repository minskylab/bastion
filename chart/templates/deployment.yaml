apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "directus.fullname" . }}
  labels:
    {{- include "directus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "directus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "directus.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "directus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: KEY
              value: "{{ .Values.directus.key }}"
            - name: SECRET
              value: "{{ .Values.directus.secret }}"
            - name: ADMIN_EMAIL
              value: "{{ .Values.directus.admin.email }}"
            - name: ADMIN_PASSWORD
              value: "{{ .Values.directus.admin.password }}"
            - name: STORAGE_LOCAL_ENDPOINT
              value: "{{ .Values.directus.storage.s3.endpoint }}"
            - name: STORAGE_LOCAL_KEY
              value: "{{ .Values.directus.storage.s3.accessKey }}"
            - name: STORAGE_LOCAL_SECRET
              value: "{{ .Values.directus.storage.s3.secretKey }}"
            - name: STORAGE_LOCAL_REGION
              value: "{{ .Values.directus.storage.s3.region }}"
            - name: STORAGE_LOCAL_BUCKET
              value: "{{ .Values.directus.storage.s3.bucket }}"
            - name: DB_CONNECTION_STRING
              value: "{{ .Values.directus.database.uri }}"
            - name: ACCESS_TOKEN_TTL
              value: "{{ .Values.directus.accessToken.ttl }}"
            - name: REFRESH_TOKEN_TTL
              value: "{{ .Values.directus.refreshToken.ttl }}"
            - name: REFRESH_TOKEN_COOKIE_SECURE
              value: "{{ .Values.directus.refreshToken.cookieSecure }}"
            - name: REFRESH_TOKEN_COOKIE_SAME_SITE
              value: "{{ .Values.directus.refreshToken.cookieSameSite }}"
            - name: PORT
              value: "{{ .Values.directus.port }}"
            - name: PUBLIC_URL
              value: "{{ .Values.directus.publicURL }}"
            - name: RATE_LIMITER_ENABLED
              value: "{{ .Values.directus.rateLimiter.enabled }}"
            - name: RATE_LIMITER_STORE
              value: "{{ .Values.directus.rateLimiter.store }}"
            - name: RATE_LIMITER_POINTS
              value: "{{ .Values.directus.rateLimiter.points }}"
            - name: RATE_LIMITER_DURATION
              value: "{{ .Values.directus.rateLimiter.duration }}"
            - name: CACHE_ENABLED
              value:  "{{ .Values.directus.cache.enabled }}"
            - name: EXTENSIONS_PATH
              value: "{{ .Values.directus.extensions.path }}"
          ports:
            - name: http
              containerPort: 8055
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
