// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/minskylab/bastion/ent/member"
	"github.com/minskylab/bastion/ent/organization"
	"github.com/minskylab/bastion/ent/project"
	"github.com/minskylab/bastion/ent/role"
	"github.com/minskylab/bastion/ent/schema"
	"github.com/minskylab/bastion/ent/task"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	memberFields := schema.Member{}.Fields()
	_ = memberFields
	// memberDescCreatedAt is the schema descriptor for createdAt field.
	memberDescCreatedAt := memberFields[1].Descriptor()
	// member.DefaultCreatedAt holds the default value on creation for the createdAt field.
	member.DefaultCreatedAt = memberDescCreatedAt.Default.(func() time.Time)
	// memberDescUpdatedAt is the schema descriptor for updatedAt field.
	memberDescUpdatedAt := memberFields[2].Descriptor()
	// member.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	member.DefaultUpdatedAt = memberDescUpdatedAt.Default.(func() time.Time)
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescCreatedAt is the schema descriptor for createdAt field.
	organizationDescCreatedAt := organizationFields[1].Descriptor()
	// organization.DefaultCreatedAt holds the default value on creation for the createdAt field.
	organization.DefaultCreatedAt = organizationDescCreatedAt.Default.(func() time.Time)
	// organizationDescUpdatedAt is the schema descriptor for updatedAt field.
	organizationDescUpdatedAt := organizationFields[2].Descriptor()
	// organization.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	organization.DefaultUpdatedAt = organizationDescUpdatedAt.Default.(func() time.Time)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescCreatedAt is the schema descriptor for createdAt field.
	projectDescCreatedAt := projectFields[1].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the createdAt field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(func() time.Time)
	// projectDescUpdatedAt is the schema descriptor for updatedAt field.
	projectDescUpdatedAt := projectFields[2].Descriptor()
	// project.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	project.DefaultUpdatedAt = projectDescUpdatedAt.Default.(func() time.Time)
	// projectDescStartAt is the schema descriptor for startAt field.
	projectDescStartAt := projectFields[5].Descriptor()
	// project.DefaultStartAt holds the default value on creation for the startAt field.
	project.DefaultStartAt = projectDescStartAt.Default.(func() time.Time)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescCreatedAt is the schema descriptor for createdAt field.
	roleDescCreatedAt := roleFields[1].Descriptor()
	// role.DefaultCreatedAt holds the default value on creation for the createdAt field.
	role.DefaultCreatedAt = roleDescCreatedAt.Default.(func() time.Time)
	// roleDescUpdatedAt is the schema descriptor for updatedAt field.
	roleDescUpdatedAt := roleFields[2].Descriptor()
	// role.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	role.DefaultUpdatedAt = roleDescUpdatedAt.Default.(func() time.Time)
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescCreatedAt is the schema descriptor for createdAt field.
	taskDescCreatedAt := taskFields[1].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the createdAt field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
	// taskDescUpdatedAt is the schema descriptor for updatedAt field.
	taskDescUpdatedAt := taskFields[2].Descriptor()
	// task.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	task.DefaultUpdatedAt = taskDescUpdatedAt.Default.(func() time.Time)
}
